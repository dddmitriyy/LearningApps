// Generated by view binder compiler. Do not edit!
package ru.freeit.notes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.freeit.notes.R;

public final class NoteListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageButton copyButton;

  @NonNull
  public final AppCompatImageButton editButton;

  @NonNull
  public final AppCompatTextView editedDateText;

  @NonNull
  public final AppCompatImageButton removeButton;

  @NonNull
  public final AppCompatTextView tagsText;

  @NonNull
  public final AppCompatTextView titleText;

  private NoteListItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageButton copyButton, @NonNull AppCompatImageButton editButton,
      @NonNull AppCompatTextView editedDateText, @NonNull AppCompatImageButton removeButton,
      @NonNull AppCompatTextView tagsText, @NonNull AppCompatTextView titleText) {
    this.rootView = rootView;
    this.copyButton = copyButton;
    this.editButton = editButton;
    this.editedDateText = editedDateText;
    this.removeButton = removeButton;
    this.tagsText = tagsText;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NoteListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NoteListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.note_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NoteListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.copy_button;
      AppCompatImageButton copyButton = ViewBindings.findChildViewById(rootView, id);
      if (copyButton == null) {
        break missingId;
      }

      id = R.id.edit_button;
      AppCompatImageButton editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.edited_date_text;
      AppCompatTextView editedDateText = ViewBindings.findChildViewById(rootView, id);
      if (editedDateText == null) {
        break missingId;
      }

      id = R.id.remove_button;
      AppCompatImageButton removeButton = ViewBindings.findChildViewById(rootView, id);
      if (removeButton == null) {
        break missingId;
      }

      id = R.id.tags_text;
      AppCompatTextView tagsText = ViewBindings.findChildViewById(rootView, id);
      if (tagsText == null) {
        break missingId;
      }

      id = R.id.title_text;
      AppCompatTextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new NoteListItemBinding((ConstraintLayout) rootView, copyButton, editButton,
          editedDateText, removeButton, tagsText, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
